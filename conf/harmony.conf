//        ___  ___   _______   ______   _    __   _______   _    __   __  __
//       /  / /  /  / ___  /  / _   /  / \_ / /  / ___  /  / |  / /  / / / /
//      /  /_/  /  / /  / /  / /_/ /  /      /  / /  / /  /  | / /  / /_/ /   
//     /  __   /  / /__/ /  /    _/  / /\_/ /  / /  / /  / /||/ /  /_  __/
//    /  / /  /  / ___  /  / /| |   / /  / /  / /__/ /  / / |  /    / /
//   /__/ /__/  /_/  /_/  /_/ |_|  /_/  /_/  /______/  /_/  |_/    /_/
//////////////////////////////////////////////////////////////////// v3.3 ///
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
// -- Ragnarok Online Security Solution --
// (c) 2008 - 2012 Daniel Stelter-Gliese
//
// For more information on this configuration consult the documentation at
//    https://forum.harmonize.it/viewtopic.php?f=3&t=10
////
// DO NOT MODIFY THIS FILE.
// Put custom configuration settings in harmony_custom.conf

// GM level which allows users to bypass Harmony protection
// Default: 100
protection_bypass_level: 100


// Logging method
// Determines how Harmony logs events.
// Possible values:
//   0       Events are only logged to the server console
//   1       Events are logged to the harmony_log SQL table
//   2       Events are logged to log/harmony.log
//   3       SQL logging is attempted, if it's unavailable the textfile is used
// Default: 3
log_method: 3

////////////////////////////////////
///////// BASIC INFORMATION ////////
////////////////////////////////////
// Harmony detects several cheating attempts.
// You can configure how to react to each attempt.
// Each setting is <action>,<delay in ms>[,<parameter>]
//
// Valid actions:
//   kick		Kick the player
//           	The player is sent back to the login screen.
//           	Alternatively, you may specify the clif_authfail_fd()
//           	type value as parameter:
//           	   1	Server closed [msgstringtable: line 4]
//           	   2	ID already logged in [msgstringtable: line 6]
//           	   3	Time gap / too much lag [msgstringtable: line 242]
//           	   4	Server full [msgstringtable: line 265]
//           	   5	Underaged [msgstringtable: line 306]
//           	   6	Server still recognizes your last connection [msgstringtable: line 442]
//           	   7	Too many connections from this IP [msgstringtable: line 530]
//           	   15	Disconnected by GM (== throw back to login screen)
//           	   else	Disconnected from server [msgstringtable: line 4]
//   ban        Bans the player. By default, the account state is set to 5.
//              Alternatively, you may specify the stat as parameter:
//                 ban, 0      sets state to 5
//                 ban, 0, 5   sets state to 5
//                 ban, 0, 102 sets state to 102
//   jail		Jail the player
//   message	Display a message (text as parameter)
//   restrict	Restrict attack/skill actions
//   autoban	Automatically bans the players IP. This will keep
//         		hackers from testing their cheat attempts over and
//          	over again.
//           	The duration is given as delay value.
//           	NOTE: A value of -1 blocks the IP infinitely
//           	NOTE: All autobans are lifted after the server is restarted
//           	NOTE: Due to the internal timing system of eAthena you should not
//           	      use intervals of more than ~20 days. If you want to ban for
//           	      a long period of time simply use -1 to block until next restart.
//   console	Prints a message on the server console
//
// Delay specifies how many milliseconds to wait before performing this action.
// NOTE: Actions are not triggered if the user logs out before this time expires.
// IMPORTANT: For autoban actions, this flag identifies the autoban duration in seconds!
//
// The parameter is used for certain actions, such as messages. It's
// content depends on the action.
////////////
////////////

// Client Memory Modifications
// NOTE: XRay exes will always trigger this due to polymorphic code. It must be disabled
// in this case (by removing the two following lines)
//
// NOTE: No log entry is needed here. As long as there is at least one action
// registered Harmony will automatically log the incident and include relevant
// memory addresses. To only create log entry you can add a dummy-action like
// "autoban, 0".
codepatch: kick, 0
codepatch: autoban, -1

// Modified client access permissions. Client access permissions
// hide the client process from tools like WPE.
// NOTE: This feature is EXPERIMENTAL, is not verified whether harmless
//       3rd party software might trigger this. Enable at your own risk!
proc_access: kick, 0
proc_access: autoban, 600
proc_access: log, 0, Process permissions modified.

// Debugger -- used for analyzing and reversing the client internals
// Normal players don't do that.
debugger: autoban, -1
debugger: kick, 0
debugger: log, 0, Debugger attached

// Speedhacks make the system time faster to bypass client-side
// delay checks.
// NOTE: Kicks caused by this detection are displayed like this:
//       "You've been disconnected due to a time gap between you and the server."
//       If many players get this error it is recommended to disable the kick action
//       by removing the first of the three lines and using @reloadharmony.
//       Please also contact the tech support about this issue, you will
//       receive further information on how to deal with it and restore the
//       correct speedhack detection.
speedhack: kick, 0, 3
speedhack: autoban, 0
speedhack: log, 0, Speedhack detected

////////////////////////////////////
/////////// GRF INTEGRITY //////////
////////////////////////////////////
// Harmony is able to monitor the client GRF
// for illegal files. The server maintains a list
// of files and their correct checksum. If a client
// opens a file with an unknown checksum Harmony will
// raise an alert.
// For detailed information consult the documentation.
////

// GM level which allows users to bypass the GRF integrity validation
// If protection_bypass_level is lower than this value, protection_bypass_level is used.
// Default: 100
grfintegrity_bypass_level: 100

////
// Action chain for detected GRF modifications
////

// Whether to log GRF mismatches (includes player name, file name and sent hash)
// If you don't use hdata.grf you might want to disable this (although it's
// strongly recommended to use hdata.grf)
grfintegrity_log_mismatch: yes

// Immediately block attacks
grfintegrity: restrict, 0

// Then display a message
// (To ensure that messages are printed in the correct order you may want to send them with a delay of 1ms)
grfintegrity: message, 100, Illegal GRF modification detected!
grfintegrity: message, 500, Please remove any custom modifications and restart the game.
grfintegrity: message, 900, You are not allowed to attack.

// And kick after a minute
grfintegrity: kick, 60000

// Number of seconds an IP is blocked if a modified GRF is detected
// BEWARE: kRO updates might change files. When setting this value
//         make sure your client includes all listed files and overwrites
//         the default r/data.grf (or add hdata.grf with highest priority)
grfintegrity: autoban, 0

////////////////////////////////////
////////// SERVER SIDE GMS /////////
////////////////////////////////////

// Whether the serverside GM list is enabled
// This feature allows you to give admin accounts
// the game master sprite and yellow font.
// You can decide whether to list admin accounts
// by their account ID or automatically flag
// all accounts of a given level.
// The <admin> section of clientinfo.xml is
// ignored.
serverside_gm_enabled: no

// The minimum GM level required to automatically
// show GM sprites.
serverside_gm_minlevel: 60

// List of account IDs that always get GM sprites,
// regardless of their GM level
// to include these two accounts.
////
serverside_gm_include:

// List of account IDs that never get GM sprites,
// even if their GM level is above serverside_gm_minlevel.
// Use this setting once for each each account ID,
// e.g.:
//    serverside_gm_include: 2000000
//    serverside_gm_include: 2000001
// to exclude these two accounts.
////
serverside_gm_exclude:


////////////////////////////////////
/////// MULTI CLIENT SETTINGS //////
////////////////////////////////////
// Harmony can limit connections from certain IP addresses or
// computers. You can use this feature to prevent excessive
// multi clienting.
////

// Required GM level where sessions are not counted as
// multi sessions.
// Default: 99
multiclient_bypass_level: 99

/////////////////
// Multiclient: IP limit
/////////////////
// Number of connections allowed per IP
// Multiple physical computers might have the same same IP if
// they are sharing one internet connection.
// Use -1 to disable this check.
// Default: -1 (unlimited)
max_connections_per_ip: -1

// What to do if the IP rate is exceeded
multiclient_ip: log, 0, Too many connections from one IP.

multiclient_ip: message, 100, The limit of simultaneous game connections was exceeded.
// You might want to add this message telling the player what the actual limit is.
// multiclient_ip: message, 500, There is a limit of <VALUE> logins per IP address.

// This will trigger the following message:
//  "IP capacity of this Internet Cafe is full. Would you like to pay the personal base?"
//  You can customize this message by editing msgstringtable.txt line 530.
multiclient_ip: kick, 5000, 9

/////////////////
// Multiclient: PC limit
/////////////////
// Number of connections allowed per physical computer
// Use -1 to disable this check.
// Default: -1 (unlimited)
max_connections_per_pc: -1

// What to do if the PC rate is exceeded
multiclient_pc: log, 0, Too many connections from one PC.

multiclient_pc: message, 100, The limit of simultaneous game connections was exceeded.
// You might want to add this message telling the player what the actual limit is.
// multiclient_pc: message, 500, There is a limit of <VALUE> logins per computer.

// This will trigger the following message:
//  "IP capacity of this Internet Cafe is full. Would you like to pay the personal base?"
//  You can customize this message by editing msgstringtable.txt line 530.
multiclient_pc: kick, 5000, 9

////////////////////////////////////
///////// AUTOBAN SETTINGS /////////
////////////////////////////////////
// Several generic events which can be enabled for autoban
// See <link> for further information on the autoban feature
////
// Autoban feature enabled?
// For details, see the basic information block below
// Default: yes
autoban_enabled: yes

// Number of seconds an IP is banned when an unencrypted login is detected
// This might indicate a 3rd party client exe or an attempt to use OpenKore
// Default: 10 minutes
autoban_unsafe_login: 600

// Number of seconds an IP is banned when a protocol error is detected
// This strongly indicates an attempt to emulate or bypass Harmony.
// Default: infinite
autoban_malformed_protocol: -1

// Number of seconds an IP is banned if a connection is made from a blocked Mac address
// (When a PC is blocked by Mac address every connection attempt from this PC will result
//  in the current IP address being blocked for some time)
// - Useful to make bypassing Mac bans harder
// Default: 12 hours
autoban_mac_blocked: 43200

////////////////////////////////////
//////////// SPELL DELAY ///////////
////////////////////////////////////
// Monitors incoming skill usage packets from the client.
// If a client sends way more skill packets than possible with a regular
// skill delay this strongly indicates a no-delay hack.
// To avoid false positives due to network lags the detection is triggered
// only if such packet patterns are detected multiple times over a certain
// period of time.
////

// Default configuration:
// If a client sends more than 12 (spelldelay_threshold) skill packets within
// one second (spelldelay_interval) the internal fail counter is increased.
// If a clients fail counter exceeds 5 (spelldelay_failcount) a no-delay
// detection is triggered (nodelay)

// Whether the no-delay detection is enabled
spelldelay_enabled: yes

// Number of milliseconds for each monitoring interval
// Default: 1000ms
spelldelay_interval: 1000

// Number of skill packets allowed in this period
// Default: 14 (theoretical maximum: 10)
spelldelay_threshold: 14

// How often a packet flood must have been detected before any action is taken
spelldelay_failcount: 5

// Number of milliseconds after the fail count is decreased by one (to avoid false
// positives triggering the detection after a long time in game)
// Default: 60000
spelldelay_cooldown: 60000

nodelay: restrict, 0
nodelay: message, 100, You will be disconnected for skill spam in 15 seconds.
nodelay: kick, 15000, 15
nodelay: log, 0, No-Delay hack detected


// NDL detection
ndl: log, 0, Dedicated NoDelay hack (NdlHaste) detected
ndl: ban, 0, 102
ndl: autoban, 0, -1
ndl: message, 10000, You are using an illegal cheat tool.
ndl: jail, 10001
ndl: kick, 25000, 15

// Suspended system thread
detect_thread_sus: log, 0, An internal Harmony thread has been suspended
detect_thread_sus: message, 0, You are about to be logged out due to a failed security synchronization.
detect_thread_sus: kick, 15000, 15

// Dangerous. Please report this immediately if you see it in your logs.

detect_der: log, 0, Suspicious debugging activity detected. Please report this immediately.
detect_der: ban, 30000, 102
detect_der: autoban, 30000, -1

// Dangerous. Please report this immediately if you see it in your logs.
detect_strtok: log, 0, Illegal stream token. Please report this immediately.
detect_strtok: ban, 30000, 102
detect_strtok: autoban, 30000, -1

// Terminated system thread
// A common attempt to bypass signature scans by terminating the worker thread Harmony uses
detect_thread_term: log, 0, An internal Harmony thread has been terminated.
detect_thread_term: ban, 0, 102
detect_thread_term: autoban, 0, -1
detect_thread_term: message, 0, Critical security synchronization failed. Your account has been locked for further investigation.
detect_thread_term: kick, 15000, 15

// Speedhack settings
/////////////////////
// See https://forum.harmonize.it/viewtopic.php?f=3&t=33 for an explanation of these settings
zone_malformed_grace_time: 45000
zone_time_glitch: 30000
zone_time_glitch_cooldown: 400000 // (n+30k)/n -> 7.5% 

////////////////////////////////////
///////// INTERNAL SETTINGS ////////
////////////////////////////////////
// Internal configuration
// DON'T change anything unless you know what you're doing.
////
detection: 0, detect_thread_sus
detection: 1, detect_der
detection: 2, detect_strtok
detection: 5, ndl
detection: 6, detect_thread_term

// Put all customized settings in this file!
import: conf/harmony_custom.conf
